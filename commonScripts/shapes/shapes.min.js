function Cylinder(t,s,h,e){Shape3D.call(this,t,s),this.radius=h,this.halfHeight=e}function Sphere(t,s,h){Shape3D.call(this,t,s),this.radius=h}var ShapeType=Object.freeze({CYLINDER:0,SPHERE:1,NUM_SHAPE_TYPES:2}),Shape3D=function(t,s){this.longitudeBands=t,this.latitudeBands=s,this.vbo=null};Shape3D.prototype.bindBuffer=function(t,s,h,e){if(this.vbo){var i=Float32Array.BYTES_PER_ELEMENT,u=i*this.vbo.itemSize;t.bindBuffer(t.ARRAY_BUFFER,this.vbo),t.vertexAttribPointer(s,3,t.FLOAT,!1,u,0),this.vbo.itemSize>5&&t.vertexAttribPointer(h,3,t.FLOAT,!1,u,3*i),5==this.vbo.itemSize?t.vertexAttribPointer(e,2,t.FLOAT,!1,u,3*i):8==this.vbo.itemSize&&t.vertexAttribPointer(e,2,t.FLOAT,!1,u,6*i)}},Shape3D.prototype.render=function(t){this.vbo&&t.drawArrays(t.TRIANGLE_STRIP,0,this.vbo.numItems)},Shape3D.calcIntersectDistances=function(t,s,h){var e=s*s-4*t*h;return Math.abs(e)<1e-4?[s/(2*t)]:0>e?[]:[(s+e)/(2*t),(s-e)/(2*t)]},Cylinder.prototype=Object.create(Shape3D.prototype),Cylinder.prototype.constructor=Cylinder,Cylinder.prototype.createVBO=function(t,s,h){for(var e,i,u=[],a=1,r=0,p=1,n=1-1/this.longitudeBands,o=2*Math.PI/this.longitudeBands,d=Math.cos(o),c=Math.sin(o),v=1;v<=this.longitudeBands;v++){for(var l=0;l<=this.latitudeBands;l++)e=l/this.latitudeBands*this.halfHeight*2-this.halfHeight,i=1-l/this.latitudeBands,u.push(d*this.radius),u.push(e),u.push(c*this.radius),s&&(u.push(d),u.push(0),u.push(c)),h&&(u.push(n),u.push(i)),u.push(a*this.radius),u.push(e),u.push(r*this.radius),s&&(u.push(a),u.push(0),u.push(r)),h&&(u.push(p),u.push(i));v<this.longitudeBands&&(u.push(a*this.radius),u.push(e),u.push(r*this.radius),s&&(u.push(a),u.push(0),u.push(r)),h&&(u.push(p),u.push(i)),a=d,r=c,p=n,o=2*(v+1)*Math.PI/this.longitudeBands,d=Math.cos(o),c=Math.sin(o),n=1-(v+1)/this.longitudeBands,u.push(d*this.radius),u.push(-this.halfHeight),u.push(c*this.radius),s&&(u.push(d),u.push(0),u.push(c)),h&&(u.push(n),u.push(1)))}this.vbo=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.vbo),t.bufferData(t.ARRAY_BUFFER,new Float32Array(u),t.STATIC_DRAW),this.vbo.itemSize=3,s&&(this.vbo.itemSize+=3),h&&(this.vbo.itemSize+=2),this.vbo.numItems=u.length/this.vbo.itemSize},Cylinder.intersectsRay=function(t,s,h,e){var i=vec3.create(),u=vec3.create(),a=vec3.create(),r=vec3.create();vec3.subtract(i,h,e),vec3.subtract(u,t,e),vec3.cross(a,s,i),vec3.cross(r,u,i);var p=vec3.dot(a,a),n=2*vec3.dot(a,r),o=vec3.dot(r,r)-vec3.dot(i,i),d=Shape3D.calcIntersectDistances(p,n,o);return d.length>0?!0:!1},Sphere.prototype=Object.create(Shape3D.prototype),Sphere.prototype.constructor=Sphere,Sphere.prototype.createVBO=function(t,s,h){var e,i,u,a,r,p,n,o,d,c,v,l=[],b=0,f=1;c=1-1/this.longitudeBands;for(var B=1;B<=this.longitudeBands;B++){e=2*B*Math.PI/this.longitudeBands,i=Math.sin(e),u=Math.cos(e),l.push(0),l.push(1*this.radius),l.push(0),s&&(l.push(0),l.push(1),l.push(0)),h&&(l.push(c),l.push(0));for(var S=1;S<this.latitudeBands;S++)a=S*Math.PI/this.latitudeBands,r=Math.sin(a),p=Math.cos(a),n=u*r,o=p,d=i*r,c=1-B/this.longitudeBands,v=S/this.latitudeBands,l.push(n*this.radius),l.push(o*this.radius),l.push(d*this.radius),s&&(l.push(n),l.push(o),l.push(d)),h&&(l.push(c),l.push(v)),n=f*r,o=p,d=b*r,c=1-(B-1)/this.longitudeBands,v=S/this.latitudeBands,l.push(n*this.radius),l.push(o*this.radius),l.push(d*this.radius),s&&(l.push(n),l.push(o),l.push(d)),h&&(l.push(c),l.push(v));l.push(0),l.push(-1*this.radius),l.push(0),s&&(l.push(0),l.push(-1),l.push(0)),h&&(l.push(c),l.push(1)),B<this.longitudeBands&&(l.push(0),l.push(-1*this.radius),l.push(0),s&&(l.push(0),l.push(-1),l.push(0)),h&&(l.push(c),l.push(1)),c=1-B/this.longitudeBands,l.push(0),l.push(1*this.radius),l.push(0),s&&(l.push(0),l.push(1),l.push(0)),h&&(l.push(c),l.push(0))),b=i,f=u}this.vbo=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.vbo),t.bufferData(t.ARRAY_BUFFER,new Float32Array(l),t.STATIC_DRAW),this.vbo.itemSize=3,s&&(this.vbo.itemSize+=3),h&&(this.vbo.itemSize+=2),this.vbo.numItems=l.length/this.vbo.itemSize},Sphere.intersectsRay=function(t,s,h,e){var i=vec4.create();vec3.subtract(i,t,h);var u=2*vec3.dot(s,i),h=vec3.dot(i,i)-e*e,a=Shape3D.calcIntersectDistances(1,u,h);return a.length>0?!0:!1};